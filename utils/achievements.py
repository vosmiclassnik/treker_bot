import datetime
import telegram
from telebot.types import Message
from study_bot.utils.logger import setup_logger
logger = setup_logger()

achievements = {
    "first_step": "–¢—ã —Å–¥–µ–ª–∞–ª(–∞) –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å —É—á—ë–±—ã. –ù–∞—á–∞–ª–æ –ø–æ–ª–æ–∂–µ–Ω–æ! üìå –í—ã–¥–∞—ë—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º /add.",
    "full_day": "–£—á–∏–ª—Å—è(–∞—Å—å) 6 —á–∞—Å–æ–≤ –∑–∞ —Å—É—Ç–∫–∏. –ü–æ—á—Ç–∏ –º–∞—Ä–∞—Ñ–æ–Ω! üìå –ö–æ–≥–¥–∞ –∑–∞ –¥–µ–Ω—å —Å—É–º–º–∞—Ä–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ ‚â• 6 —á–∞—Å–æ–≤.",
    "master_categories": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ 5 —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –£—á—ë–±–∞ ‚Äî —ç—Ç–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ! üìå –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.",
    "night_academic": "–£—á–∏–ª—Å—è(–∞—Å—å) –ø–æ—Å–ª–µ –ø–æ–ª—É–Ω–æ—á–∏. –ù–∞—Å—Ç–æ—è—â–∏–π –Ω–æ—á–Ω–æ–π –≤–æ–∏–Ω –Ω–∞—É–∫–∏. üìå –ü—Ä–∏ /add –º–µ–∂–¥—É 00:00‚Äì04:00.",
    "iron_habit": "30 –¥–Ω–µ–π —Ö–æ—Ç—è –±—ã —Å 1 —á–∞—Å–æ–º —É—á—ë–±—ã. –≠—Ç–æ —É–∂–µ —Å–∏—Å—Ç–µ–º–∞! üìå –ï—Å—Ç—å ‚â• 30 –¥–Ω–µ–π —Å –∑–∞–Ω—è—Ç–∏—è–º–∏.",
    "absolute": "–°—É–º–º–∞—Ä–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ 100 —á–∞—Å–æ–≤ –∑–∞ —É—á—ë–±–æ–π. –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å! üìå –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ ‚â• 100.",
    "monday_achievement": "–ó–∞–ø–∏—Å–∞–ª(–∞) —É—á—ë–±—É –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫. –ù–∞—á–∏–Ω–∞–µ—à—å –Ω–µ–¥–µ–ª—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —à–∞–≥–∞! üìå /add –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫.",
    "first_true_goal": "–ü–µ—Ä–≤–∞—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Ü–µ–ª—å. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üìå –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é —Ü–µ–ª—å .",
    "hero_return": "–°–¥–µ–ª–∞–ª(–∞) –∑–∞–ø–∏—Å—å –ø–æ—Å–ª–µ 7+ –¥–Ω–µ–π –ø–µ—Ä–µ—Ä—ã–≤–∞. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Å–Ω–æ–≤–∞ –Ω–∞—á–∞—Ç—å! üìå –ö–æ–≥–¥–∞ –º–µ–∂–¥—É –∑–∞–ø–∏—Å—è–º–∏ –±—ã–ª –ø–µ—Ä–µ—Ä—ã–≤ –±–æ–ª–µ–µ –Ω–µ–¥–µ–ª–∏.",
    "max_day": "–ó–∞–ø–∏—Å–∞–ª(–∞) 4+ –∑–∞–Ω—è—Ç–∏—è –≤ –æ–¥–∏–Ω –¥–µ–Ω—å. –ù–∞—Å—Ç–æ—è—â–∞—è —Å–µ—Ä–∏—è! üìå –ö–æ–≥–¥–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–º –¥–Ω–µ ‚â• 4 –≤—ã–∑–æ–≤–∞ /add."
}

list_of_achievements = list(achievements.keys())
list_of_descriptions = list(achievements.values())



def register_handlers(bot, achieve):
    @bot.message_handler(commands=['achieve'])
    def achievements_vivod(mess: Message):
        # —Ç–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        try:
            textik = "üéñ <b>–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>\n\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–æ—Ç —Ç–≤–æ–∏ —É—á–µ–±–Ω—ã–µ –ø–æ–¥–≤–∏–≥–∏ üìöüöÄ\n\n"
            spicok = achieve.all_achieve(mess.chat.id)
            if not spicok:
                bot.send_message(mess.chat.id,
                                 " üèÜ<b>–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>üèÜ\n\n–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è üòî\n–ù–æ –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏! –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã <code>/add</code>, –∏ –ø–µ—Ä–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –Ω–µ –∑–∞—Å—Ç–∞–≤—è—Ç —Å–µ–±—è –∂–¥–∞—Ç—å üéñ",
                                 parse_mode=telegram.constants.ParseMode.HTML)
            else:
                for i in spicok:

                    norm_name = ''
                    if i[2] == 'first_step':
                        norm_name = '–ü–µ—Ä–≤—ã–π —à–∞–≥ü•á'
                    elif i[2] == 'full_day':
                        norm_name = '–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å‚è≥'
                    elif i[2] == 'master_categories':
                        norm_name = '–ú–∞—Å—Ç–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π'
                    elif i[2] == 'night_academic':
                        norm_name = '–ù–æ—á–Ω–æ–π –∞–∫–∞–¥–µ–º–∏–∫üßôüåô‚ÄçÔ∏è'
                    elif i[2] == 'iron_habit':
                        norm_name = '–ñ–µ–ª–µ–∑–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞‚è∞'
                    elif i[2] == 'absolute':
                        norm_name = '–ê–±—Å–æ–ª—é—Ç!üî•'
                    elif i[2] == 'monday_achievement':
                        norm_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –¥–µ–Ω—å —Ç—è–∂–µ–ª—ã–πüóì'
                    elif i[2] == 'first_true_goal':
                        norm_name = '–ü–µ—Ä–≤—ã–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Ü–µ–ª—å!üéØ'
                    elif i[2] == 'hero_return':
                        norm_name = '–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≥–µ—Ä–æ—èü¶∏‚Äç'
                    elif i[2] == 'max_day':
                        norm_name = '–ö–∞—Ç–∫–∞ –Ω–∞ –º–∞–∫—Å–∏–º—É–ºüòÆ‚Äçüí®'

                    textik += (
                        f"‚úÖ <b>{norm_name}</b>\n"
                        f"<i>{i[4]}</i>\n"
                        f"üìÖ –ü–æ–ª—É—á–µ–Ω–æ: {i[5]}\n\n"
                    )
                bot.send_message(mess.chat.id, textik, parse_mode=telegram.constants.ParseMode.HTML)
        except Exception as e:
            logger.error(f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {mess.chat.id}: {e}', exc_info=True)

def nachalo(mess: Message, achieve):
    for i in range(10):
        achieve.set_achieve(mess.chat.id, list_of_achievements[i],desc=list_of_descriptions[i], active=False)
    logger.info(f'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã–µ –ø–µ—Ä–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {mess.chat.id}')


def check_first_step(bot, mess: Message, achieve, users):
    try:
        norm_name = "–ü–µ—Ä–≤—ã–π —à–∞–≥ü•á"
        total_bet = users.check_zapisi(mess.chat.id)
        if total_bet == 1 and not achieve.check_achieve(mess.chat.id, 'first_step'):
            achieve.change_status(mess.chat.id, 'first_step', date=datetime.datetime.today())
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mess.chat.id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ first_step')
            bot.send_message(mess.chat.id, f"üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:\n\n{norm_name}\n<i>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ - /achieve</i>", parse_mode=telegram.constants.ParseMode.HTML)
    except Exception as e:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è first_step —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {mess.chat.id}: {e}', exc_info=True)



def check_absolute(bot, mess: Message, achieve, summa):
    try:
        norm_name = "–ê–±—Å–æ–ª—é—Ç!üî•"
        if int(summa) >= 100 and not achieve.check_achieve(mess.chat.id, 'absolute' ):

            achieve.change_status(mess.chat.id, 'absolute', datetime.datetime.today())
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mess.chat.id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ absolute')
            bot.send_message(mess.chat.id, f"üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:\n\n{norm_name}\n<i>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ - /achieve</i>", parse_mode=telegram.constants.ParseMode.HTML)
    except Exception as e:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è absolute —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {mess.chat.id}: {e}', exc_info=True)


def check_monday(bot, mess: Message, achieve, weekday):
    try:
        norm_name = "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –¥–µ–Ω—å —Ç—è–∂–µ–ª—ã–πüóì!"
        if weekday == 0 and not achieve.check_achieve(mess.chat.id, 'monday_achievement'):

            achieve.change_status(mess.chat.id, 'monday_achievement', datetime.datetime.today())
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mess.chat.id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ monday_achievement')
            bot.send_message(mess.chat.id, f"üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:\n\n{norm_name}\n<i>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ - /achieve</i>", parse_mode=telegram.constants.ParseMode.HTML)
    except Exception as e:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è monday_achievement —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {mess.chat.id}: {e}', exc_info=True)

def check_first_goal(bot, mess: Message, achieve, status):
    try:
        norm_name = '–ü–µ—Ä–≤—ã–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Ü–µ–ª—å!üéØ'
        if status == '‚úÖ':
            achieve.change_status(mess.chat.id, 'first_true_goal', datetime.datetime.today())
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mess.chat.id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ first_true_goal')
            bot.send_message(mess.chat.id, f"üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:\n\n{norm_name}\n<i>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ - /achieve</i>", parse_mode=telegram.constants.ParseMode.HTML)
    except Exception as e:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è first_true_goal —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {mess.chat.id}: {e}', exc_info=True)
